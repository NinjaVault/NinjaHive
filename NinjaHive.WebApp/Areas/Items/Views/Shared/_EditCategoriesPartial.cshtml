@using NinjaHive.WebApp.Areas.Items.Controllers
@using NinjaHive.WebApp.Areas.Items.Models
@using NinjaHive.WebApp.Helpers

@model IGameItemViewModel


@Html.LabelFor(m => m.BaseGameItem.CategoryId, new { @class = "col-md-4 control-label" })
<div class="col-md-8">
    @Html.DropDownList("_mainCategorySelect", Model.MainCategories, new { @class = "form-control", onChange = "ninjaHive.swapSubCategories(this)", id = "gameItemMainCategorySelect" })
    @Html.DropDownListFor(m => m.BaseGameItem.CategoryId, Model.Categories, new { @class = "form-control" })
    @Html.ValidationMessageFor(m => m.BaseGameItem.CategoryId, "", new { @class = "text-danger" })
</div>

@{var subCategoryRequest = UrlProvider<GameItemsController>.GetUrl(c => c.GetSubCategoriesJson(null));
var parentCategoryRequest = UrlProvider<GameItemsController>.GetUrl(c => c.GetMainCategoriesJson(null));

bool hasCategory = Model.BaseGameItem.SubCategoryName != null;}

<script src="~/Scripts/NinjaHive/NinjaHive_EditGameItemScripts.js"></script>
<script>
    ninjaHive.requestUrl.subCategories = "@subCategoryRequest";
    ninjaHive.requestUrl.mainCategories = "@parentCategoryRequest";

    if(@hasCategory.ToString().ToLower())
        ninjaHive.setMainCategory(document.getElementById("gameItemMainCategorySelect"), "@Model.BaseGameItem.SubCategoryMainCategoryName", "@Model.BaseGameItem.SubCategoryName");
</script>