@using NinjaHive.Core.Extensions
@using NinjaHive.WebApp.Controllers
@using NinjaHive.WebApp.Extensions
@using NinjaHive.WebApp.Helpers
@model IReadOnlyCollection<NinjaHive.WebApp.Models.UserViewModel>

<div class="row">
    <div class="page-header">
        <h2>Manage Users</h2>
        @(Html.ActionLink<AccountController>("Register new user", c => c.CreateUser(), new {@class = "btn btn-primary"}))
    </div>

    @if (Model.Any())
    {
        <table class="table table-striped">
            <thead>
            <tr>
                <th class="col-md-3">Username</th>
                <th class="col-md-3">E-mail</th>
                <th class="col-md-1">Confirmed</th>
                <th class="col-md-2"></th> <!--column for resending mail confirmation-->
                <th class="col-md-1"></th> <!--column for sending user password reset mail-->
                <th class="col-md-1">Edit</th> <!--column for editing user-->
                <th class="col-md-1">Delete</th> <!--column for deleting user-->
            </tr>
            </thead>
            <tbody>
            @foreach (var user in Model)
            {
                <tr>
                    <td>
                        @user.Username
                    </td>
                    <td>
                        <a href="mailto:@user.Email">@user.Email</a>
                    </td>
                    <td class="
                            @if (user.EmailConfirmed)
                            {
                                @:success
                            }
                            else
                            {
                                @:danger
                            }">
                        @user.EmailConfirmed.ToFriendlyString()
                    </td>
                    <td>
                        <button type="button" class="btn btn-primary btn-xs">Resend email confirmation</button>
                    </td>
                    <td>
                        <button type="button" class="btn btn-default btn-xs">Reset user password</button>
                    </td>
                    <td>
                        <a href="#"><span class="glyphicon glyphicon-pencil" aria-hidden="true"></span></a>
                    </td>
                    <td>
                        <a href="#" data-toggle="modal" data-target="#myModal" data-username="@user.Username" data-userid="@user.Id">
                            <span class="glyphicon glyphicon-trash" aria-hidden="true"></span>
                        </a>
                    </td>
                </tr>
            }
            </tbody>

        </table>

    }
    else
    {
        @Html.Partial(Partials.NoResults)
    }
</div>

<!-- Modal -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Delete user</h4>
            </div>
            <div class="modal-body">
                Are you sure you want to delete the user '<span id="username"></span>'? This action cannot be undone.
            </div>
            <div class="modal-footer">
                @using (Html.BeginForm<AccountController>(c => c.DeleteUser(string.Empty)))
                {
                    @Html.Hidden("userid");
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                    <input type="submit" value="Delete user" class="btn btn-danger"/>
                }
                
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script>
        $('#myModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget) // Button that triggered the modal
            var username = button.data('username');
            var userid = button.data('userid');

            var modal = $(this);
            modal.find('#username').text(username);
            modal.find('#userid').val(userid);
        })
    </script>
}