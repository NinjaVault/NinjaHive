@using Microsoft.AspNet.Identity
@using NinjaHive.Contract
@using NinjaHive.WebApp.Controllers
@using NinjaHive.WebApp.Extensions
@if (Request.IsAuthenticated)
{
    <div class="nav navbar-nav navbar-right hidden-xs">
        <ul class="nav navbar-nav navbar-right">
            <li class="dropdown">
                <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                    Welcome @User.Identity.GetUserName()!
                    <span class="caret"></span>
                </a>

                @{
                    var changePassword = Html.ActionLink<AccountController>("Change password", c => c.ChangePassword(), new { role = "menuitem", tabindex = -1 });
                    var manageUsers = Html.ActionLink<AccountController>("Manage users", c => c.ManageUsers(), new { role = "menuitem", tabindex = -1 });
                    var signOut = Html.ActionLink<AccountController>("Sign out", c => c.LogOff(), new { role = "menuitem", tabindex = -1 });
                }

                <ul class="dropdown-menu" id="dropdown" role="menu">
                    <li>@changePassword</li>

                    @if (HttpContext.Current.User.IsInRoles(Role.Admin))
                    {
                        <li>@manageUsers</li>
                    }

                    <li class="divider"></li>
                    <li>@signOut</li>
                </ul>
            </li>
        </ul>
    </div>

    <ul class="nav navbar-nav navbar-right visible-xs">
        <li>@changePassword</li>

        @if (HttpContext.Current.User.IsInRoles(Role.Admin))
        {
            <li>@manageUsers</li>
        }

        <li>@signOut</li>
    </ul>
}
else
{
    var action = ViewContext.RouteData.Values["Action"].ToString();

    <ul class="nav navbar-nav navbar-right">
        <li class="@(action == "Login" ? "active" : "")">
            @(Html.ActionLink<AccountController>("Login", c => c.Login(string.Empty)))
        </li>
    </ul>
}